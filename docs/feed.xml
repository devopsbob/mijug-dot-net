<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2025-07-30T16:36:19-04:00</updated><id>/feed.xml</id><title type="html">My Information Just Under Glass</title><subtitle>MIJUG.NET serves the communities of Southeast Michigan, Ohio, and Florida with technology, sustainability, and community engagement resources. A platform by Kranson Enterprises for sharing knowledge and connecting communities.</subtitle><author><name>Bob Kranson</name></author><entry><title type="html">Getting Started with TypeScript and Jekyll</title><link href="/tutorial/getting-started/2025/07/29/getting-started.html" rel="alternate" type="text/html" title="Getting Started with TypeScript and Jekyll" /><published>2025-07-29T08:00:00-04:00</published><updated>2025-07-29T18:53:47-04:00</updated><id>/tutorial/getting-started/2025/07/29/getting-started</id><content type="html" xml:base="/tutorial/getting-started/2025/07/29/getting-started.html"><![CDATA[# Getting Started with TypeScript and Jekyll

Welcome to our comprehensive guide on setting up a modern development workspace with TypeScript and Jekyll! This post will walk you through the key features and benefits of our integrated development environment.

<!-- excerpt-start -->

This workspace combines the power of TypeScript for application development with Jekyll for beautiful, maintainable documentation. Perfect for teams who want to keep their code and docs in sync.

<!-- excerpt-end -->

## Table of Contents

{:.no_toc}

- TOC
  {:toc}

## Key Features

### TypeScript Development

- **Full IntelliSense Support**: Get autocomplete, type checking, and refactoring
- **Modern ES Features**: Use the latest JavaScript features with confidence
- **Debugging Integration**: Debug directly in VS Code with source maps

### Jekyll Documentation

- **Live Reload**: See changes instantly as you write
- **Markdown Support**: Write documentation in familiar Markdown syntax
- **SEO Optimized**: Built-in SEO tags and sitemap generation

### Testing Suite

- **Unit Tests**: Jest integration for TypeScript testing
- **E2E Tests**: Playwright for comprehensive browser testing
- **CI/CD Ready**: GitHub Actions workflows included

## Quick Start Commands

Here are the essential commands to get you started:

```bash
# Install dependencies
npm install
cd docs && bundle install

# Start development servers
npm run dev          # TypeScript development
npm run dev:jekyll   # Jekyll documentation

# Run tests
npm test             # Unit tests
npm run test:e2e     # End-to-end tests
```

## Code Examples

### TypeScript Function

```typescript
export function greet(name: string): string {
  return `Hello, ${name}!`;
}

// Usage example
const message = greet('TypeScript Developer');
console.log(message);
```

### Jekyll Front Matter

```yaml
---
layout: post
title: 'Your Post Title'
date: 2025-07-29
categories: [development, tutorial]
tags: [typescript, jekyll]
---
```

## Markdown Features

### Lists and Links

- [TypeScript Handbook](https://www.typescriptlang.org/docs/)
- [Jekyll Documentation](https://jekyllrb.com/docs/)
- [VS Code WSL Guide](https://code.visualstudio.com/docs/remote/wsl)

### Code Blocks with Syntax Highlighting

```json
{
  "compilerOptions": {
    "target": "ES2020",
    "module": "commonjs",
    "strict": true
  }
}
```

### Tables

| Feature     | TypeScript | Jekyll |
| ----------- | ---------- | ------ |
| Hot Reload  | ✅         | ✅     |
| Type Safety | ✅         | ❌     |
| SEO         | ❌         | ✅     |
| Testing     | ✅         | ✅     |

### Callouts and Alerts

> **💡 Pro Tip**: Use the VS Code command palette (`Ctrl+Shift+P`) to quickly access Jekyll and TypeScript tasks.

> **⚠️ Warning**: Make sure to run `bundle install` in the `docs/` directory before starting Jekyll development.

> **✅ Success**: Your workspace is now configured for both TypeScript development and Jekyll documentation!

## Next Steps

1. **Explore the codebase**: Check out the `src/` directory for TypeScript examples
2. **Customize Jekyll**: Modify `docs/_config.yml` to personalize your site
3. **Write tests**: Add unit tests in `tests/` and E2E tests in `e2e/`
4. **Deploy**: Push to GitHub for automatic deployment via GitHub Actions

## Conclusion

This integrated workspace provides everything you need for modern web development with TypeScript and beautiful documentation with Jekyll. The combination of powerful development tools, comprehensive testing, and automated deployment makes it perfect for teams of any size.

Happy coding! 🚀

---

_Last updated: {{ page.last_modified_at | date: "%B %d, %Y" }}_]]></content><author><name>MIJUG Team</name></author><category term="tutorial" /><category term="getting-started" /><category term="typescript" /><category term="jekyll" /><category term="development" /><summary type="html"><![CDATA[Learn how to set up a modern development environment with TypeScript and Jekyll for documentation.]]></summary></entry><entry><title type="html">Reusing Older Computers in 2025</title><link href="/linux/2025/07/18/reusing-older-computers-in-2025.html" rel="alternate" type="text/html" title="Reusing Older Computers in 2025" /><published>2025-07-18T16:39:43-04:00</published><updated>2025-07-30T13:38:00-04:00</updated><id>/linux/2025/07/18/reusing-older-computers-in-2025</id><content type="html" xml:base="/linux/2025/07/18/reusing-older-computers-in-2025.html"><![CDATA[In the past, the type of computer you owned was largely determined by the silicon chips inside it. Mainframes, workstations, PCs, Macs, microcomputers, and minicomputers were all defined by their chipsets. Companies like IBM, Sun Microsystems, Intel, Hewlett-Packard, Texas Instruments, and Apple created hardware that was compatible with specific operating systems.

### Chips

Fast forward to 2025, and chip technology has advanced dramatically. Central processing units (CPUs) have become faster, with names like i5, i7, CoreDuo, and M1. Meanwhile, graphical processing units (GPUs), originally designed for gaming and rendering, are now essential for artificial intelligence (AI) applications. This rapid evolution has driven a relentless pace of change, particularly in security.

### The Security Race

As computing power increases, so does the ability to crack passwords. Tasks that once required a single home computer can now be accomplished faster with rented cloud computers—or even multiple rented computers across cloud providers. This has necessitated the development of new security measures, such as the Trusted Platform Module (TPM) chip, which is a minimum requirement for Windows 11.

#### Trusted Platform Module - TPM

Do you have a TPM chip in your current PC? Maybe. You’ll need to check via an internet connection and a Windows 10 update to find out. But why is a TPM chip so important? The answer lies in quantum computing. Quantum technology is on the horizon, promising to process data at speeds that could render traditional security measures obsolete. A task that might take thousands of computers days or years to complete could be done in seconds with quantum computing.

### Why Keep Your Old Computer?

While new security requirements may render older computers unsuitable for sensitive tasks like banking or business, they can still serve a purpose. Many everyday activities—like playing music, viewing photos, or casual gaming—don’t require the latest security features. Repurposing your old computer for these non-sensitive tasks can provide significant value:

- **Reduce Electronic Waste**: Reusing your old computer delays the need to dispose of it, helping to reduce e-waste.
- **Transition Gracefully**: Use your old computer as a staging ground to offload, back up, and format data before moving to a new device.
- **Extend Its Life**: Repurpose your old investment for new uses:
  - Let grandkids play games on it.
  - Turn it into a garage PC for music and video.
  - Use it for anonymous internet browsing to reduce tracking and targeted ads on your primary devices.

### Conclusion

Reusing older computers is not just about nostalgia—it’s a practical way to maximize your investment, reduce waste, and adapt to changing technology. While they may no longer meet the demands of modern security, these devices still have plenty of life left for everyday, non-sensitive tasks. So before you toss that old PC, consider how it might still serve you in 2025 and beyond.]]></content><author><name>Bob Kranson</name></author><category term="linux" /><category term="cpus" /><category term="gpus" /><summary type="html"><![CDATA[Keeping your chips out of the wood chipper]]></summary></entry><entry><title type="html">Welcome to MIJUG.NET!</title><link href="/announcements/2025/07/03/welcome-to-mijug-dot-net.html" rel="alternate" type="text/html" title="Welcome to MIJUG.NET!" /><published>2025-07-03T15:05:55-04:00</published><updated>2025-07-30T13:38:00-04:00</updated><id>/announcements/2025/07/03/welcome-to-mijug-dot-net</id><content type="html" xml:base="/announcements/2025/07/03/welcome-to-mijug-dot-net.html"><![CDATA[### Hello!

Welcome to [MIJUG.NET](https://www.mijug.net), a platform dedicated to serving the communities of southeast Michigan, Ohio, and Florida.

### Location(s)

As the proprietor of this site, I am based in southeast Michigan and occasionally travel to Ohio and Florida. This site is designed to share knowledge, resources, and updates relevant to these regions, with a focus on technology, sustainability, and community engagement.

### Thank You!

Thank you for visiting, and I look forward to connecting with you!]]></content><author><name>Bob Kranson</name></author><category term="announcements" /><summary type="html"><![CDATA[Welcome Announcement for My Information Just Under Glass - MIJUG.NET]]></summary></entry></feed>
